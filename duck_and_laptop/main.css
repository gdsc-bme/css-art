/* Author: Vladyslav Moisieienkov */

* {
    margin: 0;
    padding: 0;
}

:root {
    --background-color: #f7f5ff;
    --circle-background-color: #e8e0ff;
    --duck-main-color: #35155d;
    --screen-background-color: #d8d9da;
    --screen-line-color: grey;
    --wing-color: #1f155d;
    --duck-nose-color: #ffdcdf;
}

.canva {
    background: var(--background-color);
    height: 100vh;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
}

.circle {
    width: 70vmin;
    height: 70vmin;
    background: var(--circle-background-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.laptop>.outer-screen {
    width: 25vmin;
    height: 20vmin;
    background: var(--background-color);
    border: 0.4vmin solid black;
    border-top-left-radius: 2vmin;
    border-top-right-radius: 2vmin;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
}

.laptop>.outer-screen>.inner-screen {
    width: 22.5vmin;
    height: 17.5vmin;
    border: 0.3vmin solid black;
    border-radius: 1vmin;
    background: var(--screen-background-color);
}

.laptop>.body {
    width: 25vmin;
    height: 3vmin;
    background: var(--background-color);
    box-sizing: border-box;
    border: 0.4vmin solid black;
    border-top: 0;
    border-bottom-left-radius: 1.5vmin;
    border-bottom-right-radius: 1.5vmin;
}

.laptop>.outer-screen>.inner-screen>.line-1 {
    position: absolute;
    width: 15vmin;
    height: 1.5vmin;
    border-radius: 2vmin;
    box-sizing: border-box;
    background: var(--screen-line-color);
    transform: translate(2vmin, 2vmin);
}

.laptop>.outer-screen>.inner-screen>.line-2 {
    position: absolute;
    width: 10vmin;
    height: 1.5vmin;
    border-radius: 2vmin;
    box-sizing: border-box;
    background: var(--screen-line-color);
    transform: translate(4vmin, 4vmin);
}

.laptop>.outer-screen>.inner-screen>.line-3 {
    position: absolute;
    width: 12vmin;
    height: 1.5vmin;
    border-radius: 2vmin;
    box-sizing: border-box;
    background: var(--screen-line-color);
    transform: translate(4vmin, 6vmin);
}

.laptop>.outer-screen>.inner-screen>.line-4 {
    position: absolute;
    width: 8vmin;
    height: 1.5vmin;
    border-radius: 2vmin;
    box-sizing: border-box;
    background: var(--screen-line-color);
    transform: translate(4vmin, 8vmin);
}

.duck>.body {
    position: relative;
    width: 20vmin;
    height: 13vmin;
    border-top: 0;
    background: var(--duck-main-color);
    border-bottom-left-radius: 50vmin;
    border-bottom-right-radius: 50vmin;
    transform: rotate(-3deg);

    /* adds a small glove on a left side of the duck to immitate a light coming from laptop screen */
    box-shadow: inset 0.4vmin -0.3vmin 0.4vmin #5c4b99;
}

.duck>.head {
    width: 10vmin;
    height: 8vmin;
    background: var(--duck-main-color);
    transform: translate(-0.5vmin, 0.5vmin) rotate(-3deg);
    border-bottom: 0;
    border-top-left-radius: 50vmin;
    border-top-right-radius: 50vmin;

    /* adds a small glove on a left side of the duck to immitate a light coming from laptop screen */
    box-shadow: inset 0.5vmin 0.3vmin 0.4vmin #5c4b99;
}

.duck>.head>.eye {
    position: absolute;
    width: 4vmin;
    height: 4vmin;
    border-radius: 50%;
    background: var(--duck-main-color);
    box-shadow: 0vmin -2.5vmin white;
    top: 4.5vmin;
    left: 4.5vmin;
    transform: rotate(-3deg);

    animation-name: duck-eye;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-duration: 1s;
}

.duck>.head>.nose {
    position: absolute;
    width: 6vmin;
    height: 3vmin;
    background: orange;
    border-radius: 50vmin;
    top: 4vmin;
    left: -3vmin;
    transform: rotate(-3deg);
}

.duck>.leg1 {
    position: absolute;
    width: 2.5vmin;
    height: 7vmin;
    box-sizing: border-box;
    background: var(--duck-main-color);
    transform: translate(5vmin, -4vmin);
}

.duck>.leg2 {
    position: absolute;
    width: 2.5vmin;
    height: 7vmin;
    box-sizing: border-box;
    background: var(--duck-main-color);
    transform: rotate(-25deg) translate(12vmin, 1vmin);
}

.duck>.foot1 {
    position: absolute;
    width: 7vmin;
    height: 2.5vmin;
    border-radius: 50vmin;
    box-sizing: border-box;
    background: var(--duck-main-color);
    transform: translate(2.65vmin, 3vmin);
}

.duck>.foot2 {
    position: absolute;
    width: 7vmin;
    height: 2.5vmin;
    border-radius: 50vmin;
    box-sizing: border-box;
    background: var(--duck-main-color);
    transform: rotate(-25deg) translate(9.2vmin, 6.5vmin);
}

.duck {
    transform: translate(-3vmin, -4.5vmin);
}

.duck>.body>.wing {
    position: absolute;
    background: var(--wing-color);
    width: 12vmin;
    height: 7vmin;
    border-radius: 84% 16% 79% 21% / 71% 1% 99% 29%;
    transform: rotate(15deg) translate(5vmin, 0vmin);
    box-shadow: inset 0.1vmin 0.2vmin 0.5vmin 0.2vmin #5c4b99;
}

.duck>.body>.wing:hover {
    animation-name: duck-wing;
    animation-duration: 0.4s;
    animation-iteration-count: 4;
    animation-direction: alternate;
}

/* Note: animations break duck when screen size changes. If you want a responsive art, comment out the animations below */
@keyframes duck-wing {
    from {
        transform: rotate(15deg) translate(5vmin, 0vmin);
    }
    to {
        transform: rotate(25deg) translate(5vmin, 0vmin);
    }
}

@keyframes duck-eye {
    from {
        top: 4.5vmin;
        box-shadow: 0vmin -2.5vmin white;
    }

    to {
        top: 3.5vmin;
        box-shadow: 0vmin -1.5vmin white;
    }
}
